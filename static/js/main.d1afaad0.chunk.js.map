{"version":3,"sources":["api/colors.ts","App.tsx","api/cars.ts","index.tsx"],"names":["id","name","carsWithColors","brand","rentPrice","colorId","map","car","findColor","colorsFromServer","find","color","console","log","App","useState","query","setQuery","carColor","setCarColor","vissbleCars","filter","lowerQuery","toLowerCase","includes","length","type","placeholder","value","onChange","event","target","disabled","style","ReactDOM","render","document","getElementById"],"mappings":"mOAAe,GACb,CAAEA,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,Q,OCIXC,ECPS,CACb,CACEF,GAAI,EAAGG,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEL,GAAI,EAAGG,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEL,GAAI,EAAGG,MAAO,UAAWC,UAAW,IAAKC,QAAS,GAEpD,CACEL,GAAI,EAAGG,MAAO,OAAQC,UAAW,GAAIC,QAAS,GAEhD,CACEL,GAAI,EAAGG,MAAO,SAAUC,UAAW,GAAIC,QAAS,GAElD,CACEL,GAAI,EAAGG,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEL,GAAI,EAAGG,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEL,GAAI,EAAGG,MAAO,OAAQC,UAAW,GAAIC,QAAS,GAEhD,CACEL,GAAI,EAAGG,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEL,GAAI,GAAIG,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAElD,CACEL,GAAI,GAAIG,MAAO,aAAcC,UAAW,IAAKC,QAAS,IDzBpBC,KAAI,SAAAC,GACxC,IAAMC,EAAYC,EAAiBC,MAAK,SAAAC,GAAK,OAC3CA,EAAMX,KAAOO,EAAIF,WAGnB,OAAO,2BACFE,GADL,IAEEI,MAAOH,OAIXI,QAAQC,IAAIX,GAEL,IAAMY,EAAgB,WAC3B,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEIC,EAAW,YAAOlB,GAiBtB,OAfIc,IACFI,EAAcA,EAAYC,QAAO,SAAAd,GAC/B,IAAMe,EAAaN,EAAMO,cAGzB,OAFmBhB,EAAIJ,MAAMoB,cAEXC,SAASF,OAI/BV,QAAQC,IAAIK,GAERA,EAASO,SACXL,EAAcA,EAAYC,QAAO,SAAAd,GAAG,aAAI,UAAAA,EAAII,aAAJ,eAAWV,QAASiB,MAI5D,gCACE,uBACEQ,KAAK,SACLC,YAAY,oBACZC,MAAOZ,EACPa,SAAU,SAACC,GAAD,OAAWb,EAASa,EAAMC,OAAOH,UAG7C,yBACEA,MAAOV,EACPW,SAAU,SAACC,GAAD,OAAWX,EAAYW,EAAMC,OAAOH,QAFhD,UAIE,wBAAQI,UAAQ,EAACJ,MAAOV,EAAxB,2BACCT,EAAiBH,KAAI,gBAAGN,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACpB,iCAGGA,GAFID,SAOX,kCACE,gCACE,+BACE,oCACA,uCACA,uCACA,iDAGJ,gCACGoB,EAAYd,KAAI,gBACfN,EADe,EACfA,GACAG,EAFe,EAEfA,MACAC,EAHe,EAGfA,UACAO,EAJe,EAIfA,MAJe,OAMf,+BACE,6BAAKX,IACL,6BAAKG,IACL,oBAAI8B,MAAO,CAAEtB,MAAM,GAAD,cAAKA,QAAL,IAAKA,OAAL,EAAKA,EAAOV,OAA9B,gBAAyCU,QAAzC,IAAyCA,OAAzC,EAAyCA,EAAOV,OAChD,6BAAKG,MAJEJ,e,ME3ErBkC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d1afaad0.chunk.js","sourcesContent":["export default [\n  { id: 1, name: 'white' },\n  { id: 2, name: 'black' },\n  { id: 3, name: 'red' },\n];\n","/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport carsFromServer from './api/cars';\nimport colorsFromServer from './api/colors';\n\n// 3. Add ability to filter car by color\n\nconst carsWithColors = carsFromServer.map(car => {\n  const findColor = colorsFromServer.find(color => (\n    color.id === car.colorId\n  ));\n\n  return {\n    ...car,\n    color: findColor,\n  };\n});\n\nconsole.log(carsWithColors);\n\nexport const App: React.FC = () => {\n  const [query, setQuery] = useState('');\n  const [carColor, setCarColor] = useState('');\n\n  let vissbleCars = [...carsWithColors];\n\n  if (query) {\n    vissbleCars = vissbleCars.filter(car => {\n      const lowerQuery = query.toLowerCase();\n      const lowerBrand = car.brand.toLowerCase();\n\n      return lowerBrand.includes(lowerQuery);\n    });\n  }\n\n  console.log(carColor);\n\n  if (carColor.length) {\n    vissbleCars = vissbleCars.filter(car => car.color?.name === carColor);\n  }\n\n  return (\n    <div>\n      <input\n        type=\"search\"\n        placeholder=\"Find by car brand\"\n        value={query}\n        onChange={(event) => setQuery(event.target.value)}\n      />\n\n      <select\n        value={carColor}\n        onChange={(event) => setCarColor(event.target.value)}\n      >\n        <option disabled value={carColor}>Chose a color</option>\n        {colorsFromServer.map(({ id, name }) => (\n          <option\n            key={id}\n          >\n            {name}\n          </option>\n        ))}\n      </select>\n\n      <table>\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>Brand</th>\n            <th>Color</th>\n            <th>Rent price</th>\n          </tr>\n        </thead>\n        <tbody>\n          {vissbleCars.map(({\n            id,\n            brand,\n            rentPrice,\n            color,\n          }) => (\n            <tr key={id}>\n              <td>{id}</td>\n              <td>{brand}</td>\n              <td style={{ color: `${color?.name}` }}>{color?.name}</td>\n              <td>{rentPrice}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1, brand: 'Audi', rentPrice: 100, colorId: 1,\n  },\n  {\n    id: 2, brand: 'Audi', rentPrice: 100, colorId: 2,\n  },\n  {\n    id: 3, brand: 'Ferarri', rentPrice: 500, colorId: 3,\n  },\n  {\n    id: 4, brand: 'Ford', rentPrice: 80, colorId: 1,\n  },\n  {\n    id: 5, brand: 'Peugot', rentPrice: 50, colorId: 1,\n  },\n  {\n    id: 6, brand: 'Ford', rentPrice: 150, colorId: 1,\n  },\n  {\n    id: 7, brand: 'Ford', rentPrice: 140, colorId: 2,\n  },\n  {\n    id: 8, brand: 'Lada', rentPrice: 20, colorId: 3,\n  },\n  {\n    id: 9, brand: 'Opel', rentPrice: 100, colorId: 1,\n  },\n  {\n    id: 10, brand: 'Opel', rentPrice: 100, colorId: 2,\n  },\n  {\n    id: 11, brand: 'Mitsubishi', rentPrice: 300, colorId: 1,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}